#include <iostream>
#include <vector>
using namespace std;

int r,c,t;
int arr[50][50];
int arr2[50][50];
vector<int> cleaner;

int spread(int x, int y){
	int amount;
	int cnt=0;
	amount=arr[x][y];
	if(x>0){
		if(arr[x-1][y]!=-1){
			arr2[x-1][y] += amount/5;
			cnt++;
		}
	}
	if(x<r-1){
		if(arr[x+1][y]!=-1){
			arr2[x+1][y] += amount/5;
			cnt++;
		}
	}
	if(y>0){
		if(arr[x][y-1]!=-1){
			arr2[x][y-1] += amount/5;
			cnt++;
		}
	}
	if(y<c-1){
		if(arr[x][y+1]!=-1){
			arr2[x][y+1] += amount/5;
			cnt++;
		}
	}
	amount = amount - (amount/5)*cnt;
	arr2[x][y] += amount;
}


int wind(){
	int i,j;
	for(i=cleaner[0]-2; i>=0; i--){
		arr[i+1][0] = arr[i][0];
	}
	for(i=1; i<c; i++){
		arr[0][i-1] = arr[0][i];
	}
	for(i=1; i<=cleaner[0]; i++){
		arr[i-1][c-1] = arr[i][c-1];
	}
	for(i=c-2; i>0; i--){
		arr[cleaner[0]][i+1] = arr[cleaner[0]][i];
	}
	arr[cleaner[0]][1]=0;

	for(i=cleaner[1]+2; i<r; i++){
		arr[i-1][0] = arr[i][0];
	}
	for(i=1; i<c; i++){
		arr[r-1][i-1] = arr[r-1][i];
	}
	for(i=r-2; i>=cleaner[1]; i--){
		arr[i+1][c-1] = arr[i][c-1];
	}
	for(i=c-2; i>0; i--){
		arr[cleaner[1]][i+1] = arr[cleaner[1]][i];
	}
	arr[cleaner[1]][1]=0;

}



int main(){
	int i,j,k;
	int sum=0;

	cin >> r >> c >> t;
	for(i=0; i<r; i++){
		for(j=0; j<c; j++){
			cin >> arr[i][j];
			if(arr[i][j]==-1){
				cleaner.push_back(i);
			}
		}
	}

	for(k=0; k<t; k++){
		for(i=0; i<r; i++){
			for(j=0; j<c; j++){
				arr2[i][j]=0;
			}
		}
		for(i=0; i<r; i++){
			for(j=0; j<c; j++){
				if(arr[i][j] == -1 || arr[i][j] == 0) continue;
				else spread(i,j);
			}
		}
		for(i=0; i<r; i++){
			for(j=0; j<c; j++){
				arr[i][j]=arr2[i][j];
			}
		}

		arr[cleaner[0]][0]=-1;
		arr[cleaner[1]][0]=-1;
		wind();
/*
		/////////////////////////////////
		for(i=0; i<r; i++){
			for(j=0; j<c; j++){
				cout << arr[i][j] << "\t";
			}
			cout << endl;
		}
		cout << endl;
		/////////////////////////////////
		*/
	}

	for(i=0; i<r; i++){
		for(j=0; j<c; j++){
			sum += arr[i][j];
		}
	}
	sum += 2;
	cout << sum << endl;
	
}
